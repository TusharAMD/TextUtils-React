{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","about","Alert","alert","role","msg","App","setmode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aeeb6905.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n        {/* <link className=\"navbar-brand\" to=\"/\">{props.title}</link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n               {/* <li className=\"nav-item\">\r\n                 <Link className=\"nav-link \" to=\"/about\">{props.about}</Link> \r\n                <a className=\"nav-link \" href=\"/about\">{props.about}</a>\r\n              </li>  */}\r\n            </ul>\r\n            <div className={`form-check form-switch mx-2 text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n// Navbar.propTypes = {\r\n//     title: PropTypes.string,\r\n//     about: PropTypes.string\r\n// }\r\n\r\nNavbar.defaultProps={\r\n    title: 'whts up',\r\n    about: 'About us'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Upper was clicked\" + text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Upeercase!\",\"Success\");\r\n    }\r\n\r\n    const handleLoClick=()=>{\r\n        // console.log(\"Upper was clicked\" + text);\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase!\",\"Success\");\r\n    }\r\n\r\n    const handleClearClick=()=>{\r\n        // console.log(\"Upper was clicked\" + text);\r\n        let newText='';\r\n        setText(newText)\r\n        props.showAlert(\"Clear all meassage!\",\"Success\");\r\n    }\r\n\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleCopy=()=>{\r\n        console.log(\"I am copy\")\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Your text is copied\",\"Success\")\r\n    }\r\n\r\n    const handleExtraSpaces=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces are succesfully removed\",\"Success\")\r\n    }\r\n    const [text,setText] = useState('Enter text here');\r\n    // setText(\"new text\");\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"10\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Click</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n            <h1>your text summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} character</p>\r\n            <p>{0.008*text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n            props.alert && <div className={`alert alert-warning alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.type}</strong> : {props.alert.msg}    \r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n","\r\nimport './App.css';\r\n// import About from './component/About';\r\nimport Navbar from './component/Navbar';\r\nimport TextForm from './component/TextForm';\r\nimport React, { useState } from 'react'\r\nimport Alert from './component/Alert';\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction App() {\r\n  const [mode, setmode] = useState('light');//whether dark mode is enabled or not\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert=(message,type)=>{\r\n    setAlert({\r\n      msg:message,\r\n      type:type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 3000);\r\n  }\r\n  const toggleMode=()=>{\r\n    if (mode === 'light') {\r\n      setmode('dark');\r\n      document.body.style.backgroundColor='#042743';\r\n      showAlert(\"dark mode has been enabled\",\"success\");\r\n      document.title='TextUtils-Dark Mode';\r\n    }\r\n    else{\r\n      setmode('light');\r\n      document.body.style.backgroundColor='white';\r\n      showAlert(\"light mode has been enabled\",\"success\");\r\n      document.title='TextUtils-light Mode';\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    {/* <Router> */}\r\n      {/* <Navbar title=\"TextUtil\" about=\"about us\"/>  */}\r\n      {/* <Navbar/>     */}\r\n      <Navbar title=\"TextUtil\"  mode={mode} toggleMode={toggleMode}/> \r\n      <Alert alert={alert} />\r\n      <div className=\"container my-3\">\r\n        {/* <Switch>\r\n          <Route exact path=\"/about\"> */}\r\n            {/* <About/> */}\r\n          {/* </Route>\r\n          <Route exact path=\"/\"> */}\r\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>\r\n          {/* </Route>\r\n        </Switch> */}\r\n      </div>\r\n      {/* </Router> */}\r\n     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}